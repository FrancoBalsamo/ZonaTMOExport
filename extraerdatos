(async function () {
    let allItems = [];
    let page = 1;

    // Detectar la URL base según el elemento activo
    const activeElement = document.querySelector(".element-header-bar .element-header-bar-element.active a");
    const baseUrl = activeElement ? activeElement.href : "https://zonatmo.com/profile/read";
    const selectedTitle = activeElement
        ?.querySelector("small.element-header-bar-element-title")
        ?.textContent.trim() || "SinNombre";

    console.log(`Base URL detectada: ${baseUrl}`);
    console.log(`Lista seleccionada: ${selectedTitle}`);

    // Obtener todos los elementos paginados
    while (true) {
        console.log(`Cargando página ${page}...`); // Informar la página actual

        // Realizar la petición con la URL base y el número de página
        const response = await fetch(`${baseUrl}?page=${page}`);
        if (!response.ok) {
            console.error(`Error al cargar la página ${page}`);
            break;
        }

        const html = await response.text();
        const parser = new DOMParser();
        const doc = parser.parseFromString(html, 'text/html');

        // Seleccionar los ítems (nombre/link)
        const items = [...doc.querySelectorAll(".element.proyect-item")];
        if (items.length === 0) {
            console.log("No hay más ítems que cargar.");
            break;
        }

        // Extraer los títulos y enlaces
        items.forEach(item => {
            const title = item.querySelector(".thumbnail-title h4.text-truncate")?.getAttribute("title")?.trim() || "Sin título";
            const link = item.querySelector("a")?.getAttribute("href")?.trim() || "Sin enlace";
            allItems.push({ title, link });
        });

        console.log(`Página ${page} procesada.`);
        page++;
    }

    // Generar el archivo XLS
    console.log(`Generando archivo XLS para la lista: ${selectedTitle}`);

    // Crear el contenido del archivo XLS
    const rows = [
        ["Título", "Link"], // Encabezados
        ...allItems.map(item => [item.title, item.link]) // Datos
    ];

    // Convertir a CSV (compatible con Excel)
    const csvContent = rows.map(e => e.join("\t")).join("\n");

    // Crear y descargar el archivo
    const blob = new Blob([csvContent], { type: "text/csv;charset=utf-8;" });
    const url = URL.createObjectURL(blob);
    const a = document.createElement("a");
    a.href = url;
    a.download = `Lista de ${selectedTitle}.xls`;
    a.click();
    URL.revokeObjectURL(url);

    console.log("Archivo exportado con éxito.");
})();
